package furiabot;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.util.Random;

import org.json.JSONArray;
import org.json.JSONObject;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;

public class FuriaBot extends TelegramLongPollingBot {

    // Retorna o nome de usu√°rio do bot (necess√°rio para iniciar a comunica√ß√£o com o Telegram)
    @Override
    public String getBotUsername() {
        return "FURiAssistent_bot";  // Nome de usu√°rio do bot
    }

    // Retorna o token do bot (necess√°rio para autorizar o bot a enviar mensagens)
    @Override
    public String getBotToken() {
        return "7810007924:AAE_dMoaNMtGfT_KSC5rF2csb8GMcEqPe1c";  // Token de autentica√ß√£o do bot
    }

    // M√©todo que √© acionado sempre que o bot recebe uma atualiza√ß√£o (mensagem)
    @Override
    public void onUpdateReceived(Update update) {
        // Verifica se a atualiza√ß√£o cont√©m uma mensagem com texto
        if (update.hasMessage() && update.getMessage().hasText()) {
            // Obt√©m a mensagem do usu√°rio e o chatId para responder ao usu√°rio
            String mensagem = update.getMessage().getText();
            String chatId = update.getMessage().getChatId().toString();
            String resposta;

            // Switch para identificar qual comando foi enviado pelo usu√°rio
            switch (mensagem) {
                case "/start":
                    // Resposta inicial com os comandos dispon√≠veis para o usu√°rio
                    resposta = "Fala, FURIOSO(A)! üî• Sou o bot oficial do processo seletivo da FURIA!\n\n" +
                               "Meus comandos s√£o:\n" +
                               "üéÆ /jogos - Pr√≥ximos jogos da FURIA\n" +
                               "üìä /ranking - Ranking atual da FURIA\n" +
                               "ü§ì /curiosidades - Fatos curiosos sobre a FURIA\n" +
                               "üì∞ /noticias - √öltimas not√≠cias\n" +
                               "üìà /estatisticas - Estat√≠sticas da equipe\n" +
                               "üí™ /motiva√ß√£o - Frases motivacionais\n" +
                               "üÜò /ajuda - Mostra todos os comandos dispon√≠veis para interagir com o bot.";
                    			
                    break;
                case "/jogos":
                    // Chama o m√©todo para buscar os pr√≥ximos jogos da FURIA
                    resposta = getProximosJogos();
                    break;
                case "/ranking":
                    // Chama o m√©todo para buscar o ranking atual da FURIA
                    resposta = getRankingFuria();
                    break;
                case "/curiosidades":
                    // Chama o m√©todo para fornecer curiosidades aleat√≥rias sobre a FURIA
                    resposta = getCuriosidadesAleatorias();
                    break;
                case "/noticias":
                    // Chama o m√©todo para buscar as √∫ltimas not√≠cias da FURIA
                    resposta = getNoticiasFuria();
                    break;
                case "/estatisticas":
                    // Chama o m√©todo para fornecer as estat√≠sticas da FURIA
                    resposta = getEstatisticasFuria();
                    break;
                case "/motivacao":
                case "/motiva√ß√£o":
                    // Chama o m√©todo para fornecer frases motivacionais
                    resposta = getFrasesMotivacionais();
                    break;
                case "/elenco":
                    // Chama o m√©todo para fornecer informa√ß√µes sobre o elenco da FURIA
                    resposta = getElenco();
                    break;
                case "/ajuda":
                    resposta = "üîß Comandos do FuriaBot:\n\n" +
                               "üéÆ /jogos - Exibe os pr√≥ximos jogos da FURIA.\n" +
                               "üìä /ranking - Mostra o ranking atual da FURIA no HLTV.\n" +
                               "ü§ì /curiosidades - Apresenta curiosidades sobre a FURIA.\n" +
                               "üì∞ /noticias - Exibe as √∫ltimas not√≠cias sobre a FURIA.\n" +
                               "üìà /estatisticas - Estat√≠sticas detalhadas da FURIA.\n" +
                               "üí™ /motiva√ß√£o - Frases motivacionais para te inspirar.\n" +
                               "üì£ /elenco - Mostra os jogadores atuais da FURIA (CS2).\n" +
                               "üÜò /ajuda - Mostra todos os comandos dispon√≠veis para interagir com o bot.";
                    break;          
                default:
                    // Caso o comando n√£o seja reconhecido, retorna uma mensagem de erro
                    resposta = "‚ùå Comando desconhecido.";
            }

            // Envia a resposta de volta para o usu√°rio
            SendMessage mensagemDeResposta = new SendMessage();
            mensagemDeResposta.setChatId(chatId);
            mensagemDeResposta.setText(resposta);

            try {
                // Executa o envio da mensagem
                execute(mensagemDeResposta);
            } catch (Exception e) {
                // Trata exce√ß√µes em caso de falha ao enviar a mensagem
                e.printStackTrace();
            }
        }
    }

    // M√©todo que busca os pr√≥ximos jogos da FURIA em diferentes ligas
    public String getProximosJogos() {
        try {
            String[] idsDasLigas = {"5425", "3543", "12039", "5457"};
            StringBuilder respostaJogos = new StringBuilder();

            for (String id : idsDasLigas) {
                URL url = new URL("https://www.thesportsdb.com/api/v1/json/3/eventsnextleague.php?id=" + id);
                HttpURLConnection connection = (HttpURLConnection) url.openConnection();
                connection.setRequestMethod("GET");

                BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
                StringBuilder response = new StringBuilder();
                String inputLine;
                while ((inputLine = in.readLine()) != null) {
                    response.append(inputLine);
                }
                in.close();

                JSONObject json = new JSONObject(response.toString());

                // üõ°Ô∏è Verifica√ß√£o adicional para evitar erro
                if (!json.has("events") || json.isNull("events")) {
                    continue; // Pula se n√£o houver eventos nessa liga
                }

                JSONArray events = json.getJSONArray("events");

                for (int i = 0; i < events.length(); i++) {
                    JSONObject event = events.getJSONObject(i);
                    String homeTeam = event.getString("strHomeTeam");
                    String awayTeam = event.getString("strAwayTeam");

                    if (homeTeam.equalsIgnoreCase("FURIA") || awayTeam.equalsIgnoreCase("FURIA") ||
                        homeTeam.equalsIgnoreCase("FURIA Esports") || awayTeam.equalsIgnoreCase("FURIA Esports")) {
                        String dateEvent = event.optString("dateEvent", "Data desconhecida");
                        String strEvent = event.optString("strEvent", "Evento sem nome");
                        respostaJogos.append("üéÆ ").append(strEvent).append(" em ").append(dateEvent).append("\n");
                    }
                }
            }

            if (respostaJogos.length() == 0) {
                return "‚ùå Nenhum jogo da FURIA encontrado nos pr√≥ximos eventos.";
            }

            return respostaJogos.toString();

        } catch (Exception e) {
            e.printStackTrace(); // Mostra erro no console (√∫til para debug)
            return "‚ùå Ocorreu um erro ao buscar os pr√≥ximos jogos. Tente novamente mais tarde.";
        }
    }


    // M√©todo que retorna curiosidades aleat√≥rias sobre a FURIA
    public String getCuriosidadesAleatorias() {
        String[] curiosidades = {
            "üéØ Origem brasileira: A FURIA Esports foi fundada em 2017 por Jaime \"raizen\" P√°dua e Andr√© Akkari.",
            "üêç Estilo agressivo: A FURIA ficou famosa pelo estilo de jogo super agressivo no CS:GO.",
            "üëï Uniforme ic√¥nico: A pantera preta virou s√≠mbolo da organiza√ß√£o.",
            "üöÄ Primeira explos√£o internacional: DreamHack Masters Dallas 2019 foi um marco para a FURIA.",
            "üåé Mudan√ßa para os EUA: Em 2019, a equipe se mudou para os Estados Unidos para competir melhor.",
            "üß† arT como IGL: Conhecido por jogadas ousadas e estrat√©gias inusitadas.",
            "üéÆ KSCERATO e yuurih: A dupla que forma a alma da equipe.",
            "üèÜ Top 5 mundial: Em 2020, a FURIA esteve entre os cinco melhores do mundo.",
            "üìà Presen√ßa em v√°rios jogos: A FURIA tamb√©m atua em Valorant, LoL, Rocket League e mais.",
            "üí¨ Contato com f√£s: A organiza√ß√£o investe bastante em conte√∫do e intera√ß√£o com o p√∫blico."
        };
        return curiosidades[new Random().nextInt(curiosidades.length)];
    }

    // M√©todo que retorna as √∫ltimas not√≠cias sobre a FURIA
    public String getNoticiasFuria() {
        try {
            String apiKey = "fd88de827e0a41e29402199ec9a53d1a";
            String query = "FURIA esports";
            String urlString = "https://newsapi.org/v2/everything?q=" +
                URLEncoder.encode(query, "UTF-8") +
                "&language=pt&pageSize=3&apiKey=" + apiKey;

            URL url = new URL(urlString);
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");

            // L√™ a resposta da API de not√≠cias
            BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            StringBuilder response = new StringBuilder();
            String inputLine;

            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
            in.close();

            // Processa a resposta para exibir as not√≠cias
            JSONObject json = new JSONObject(response.toString());
            JSONArray artigos = json.getJSONArray("articles");

            StringBuilder resultado = new StringBuilder();
            for (int i = 0; i < Math.min(3, artigos.length()); i++) {
                JSONObject artigo = artigos.getJSONObject(i);
                String titulo = artigo.getString("title");
                String urlNoticia = artigo.getString("url");

                resultado.append("üì∞ *")
                         .append(titulo.replace("*", ""))  // Corrige formata√ß√£o da not√≠cia
                         .append("*\n")
                         .append("[Leia aqui](").append(urlNoticia).append(")\n\n");
            }

            // Caso n√£o haja not√≠cias, retorna uma mensagem informando
            if (resultado.length() == 0) {
                return "Nenhuma not√≠cia recente sobre a FURIA foi encontrada.";
            }

            return resultado.toString();
        } catch (Exception e) {
            e.printStackTrace();
            return "‚ùå N√£o foi poss√≠vel buscar as not√≠cias.";
        }
    }

    // M√©todo que retorna as estat√≠sticas da FURIA com um link direto para o HLTV
    public String getEstatisticasFuria() {
        return "üìä *Estat√≠sticas da FURIA*\n\n" +
               "Acesse as estat√≠sticas atualizadas da FURIA no HLTV:\n" +
               "üîó https://www.hltv.org/stats/teams/8297/furia";
    }

    // M√©todo que retorna uma frase motivacional aleat√≥ria
    public String getFrasesMotivacionais() {
        String[] frases = {
            "A FURIA n√£o √© s√≥ um time, √© uma mentalidade. Lutar, vencer e sempre buscar mais!",
            "Na FURIA, cada obst√°culo √© uma oportunidade para mostrar a verdadeira for√ßa!",
            "A FURIA √© feita de garra, paix√£o e resili√™ncia. Quando ca√≠mos, levantamos mais fortes!",
            "N√£o √© sobre ser o melhor no in√≠cio, mas sim ser o melhor at√© o fim. FURIA sempre!",
            "O verdadeiro esp√≠rito da FURIA est√° em nunca desistir, nunca recuar e sempre avan√ßar com coragem!",
            "Na FURIA, a batalha n√£o √© apenas sobre vencer, mas sobre deixar sua marca no mundo!",
            "Somos mais que jogadores, somos uma fam√≠lia. E juntos, ningu√©m pode nos parar!",
            "Onde h√° FURIA, h√° fogo! Vamos acender o jogo e mostrar a for√ßa de nossa paix√£o!",
            "Cada partida √© uma nova oportunidade de lutar com garra, e na FURIA, nunca paramos de lutar!",
            "O esp√≠rito da FURIA √© feito de coragem, uni√£o e a certeza de que somos imbat√≠veis, sempre!"
        };
        return frases[new Random().nextInt(frases.length)];
    }

    // M√©todo que retorna as informa√ß√µes sobre o elenco da FURIA (CS2)
    public String getElenco() {
        return "üî• Elenco atual da FURIA (CS2):\n\n" +
               "üëë KSCERATO - Rifler\n" +
               "üéØ yuurih - Rifler\n" +
               "üß† arT - In-Game Leader (IGL)\n" +
               "‚öîÔ∏è chelo - Entry Fragger\n" +
               "üí£ FalleN - AWPer\n\n" +
               "üßë‚Äçüè´ Coach: guerri";
    }

    // M√©todo que retorna o ranking atual da FURIA
    public String getRankingFuria() {
        return "üìä O ranking atual da FURIA no HLTV √© o seguinte:\n\n" +
               "üîó [Confira o ranking atualizado da FURIA no HLTV](https://www.hltv.org/ranking/teams)";
    }
}

